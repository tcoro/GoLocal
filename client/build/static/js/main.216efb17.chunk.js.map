{"version":3,"sources":["commons/enums/Responses.ts","commons/enums/Requests.ts","commons/config.ts","components/Auth/Login.tsx","components/Home.tsx","components/example/Button.tsx","components/util/DisplayWhen.tsx","components/example/Result.tsx","components/example/Form.tsx","components/Navbar/Navbar.tsx","components/farmersList/FarmerItem.tsx","components/Auth/Register.tsx","components/farmersList/FarmerSocket.tsx","components/cart/CartSocket.tsx","components/farmersList/Farmer.tsx","components/farmersList/FarmerList.tsx","components/cart/Item.tsx","components/cart/Cart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Responses","Requests","SERVER_LINK","socket","Home","className","src","style","width","height","Button","funcIncCount","count","onClick","DisplayWhen","this","props","visible","children","Component","Result","useState","setVisible","useEffect","Form","setCount","to","Navbar","Login","email","setEmail","password","setPassword","setUsedEmail","e","a","preventDefault","request","emit","login","io","on","response","console","log","type","value","onChange","event","target","Register","farmerLID","setFarmerLID","firstName","setFirstName","lastName","setLastName","zipCode","setZipCode","city","setCity","street","setStreet","houseNr","setHouseNr","parseInt","FarmerItem","item","farmerName","name","amount","price","mfgDate","expireDate","modeOfPayment","deliveryMethod","itemCart","farmer","addToCart","onItemClick","Farmer","farmerInfo","farmerItems","housenumber","map","FarmerList","farmers","items","FarmerSocket","Array","farmerList","setFarmerList","farmerlist","Item","Cart","emptyCart","countPrice","countItems","forEach","CartSocket","cartList","setCartList","cartlist","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.216efb17.chunk.js","sourcesContent":["export enum Responses {\r\n    login,\r\n    farmerlist,\r\n    cartlist,\r\n    addToCart,\r\n}","export enum Requests {\r\n    login,\r\n    farmerlist,\r\n    cartlist,\r\n    addToCart,\r\n    emptyCart,\r\n}","let SERVER_LINK: string;\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    SERVER_LINK = 'http://localhost:3001'\r\n    console.log('development')\r\n} else {\r\n    SERVER_LINK = ''\r\n}\r\n\r\nexport { SERVER_LINK }","import React, {useEffect, useState} from \"react\";\r\nimport \"./login.css\";\r\nimport io from 'socket.io-client';\r\nimport {ILogin} from \"../../commons/interface/ILogin\";\r\nimport {Responses} from \"../../commons/enums/Responses\";\r\nimport {Requests} from \"../../commons/enums/Requests\";\r\nimport {SERVER_LINK} from \"../../commons/config\";\r\n\r\nlet socket: any;\r\n\r\nexport const Login = function () {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [usedEmail, setUsedEmail] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        socket = io(SERVER_LINK);\r\n\r\n        socket.on(Responses.login, ({email, response}: ILogin) => {\r\n            console.log(\"got event\")\r\n            if (email == usedEmail) {\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    async function login(e: any) {\r\n        e.preventDefault();\r\n        let request: ILogin = {email: email, password: password}\r\n\r\n        socket.emit(Requests.login, (request))\r\n\r\n        setUsedEmail(email);\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={\"form\"}>\r\n                <label>\r\n                    E-Mail<br/>\r\n                    <input type={\"text\"} value={email} onChange={(event) => setEmail(event.target.value)}/>\r\n                </label>\r\n\r\n                <label>\r\n                    Password<br/>\r\n                    <input type={\"text\"} value={password} onChange={(event) => setPassword(event.target.value)}/>\r\n                </label>\r\n                <br/>\r\n                <button onClick={(e) => login(e)}>LOGIN\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './home.css'\r\n\r\nexport const Home = function () {\r\n    return (\r\n        <>\r\n            <div className={\"home\"}>\r\n                <div><h1>GO LOCAL</h1></div>\r\n                <img src={\"./logo_big.png\"} style={{width:\"10em\", height:\"10em\"}}/>\r\n                <div><h4> your local farmer shop</h4></div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport \"./Button.css\"\r\n\r\ntype Props = {\r\n    funcIncCount: (count:number) => void;\r\n    count: number\r\n}\r\n\r\nexport const Button = function ({funcIncCount, count}:Props) {\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => funcIncCount(count++)} className={\"myButton\"}>IncreaceCount</button>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport { Component } from 'react';\r\n\r\ninterface IProps {\r\n    visible: boolean;\r\n}\r\n\r\nexport class DisplayWhen extends Component<IProps, {}> {\r\n    public render(): React.ReactElement {\r\n        if (this.props.visible) {\r\n            return (\r\n                <>\r\n                    {this.props.children}\r\n                </>\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {DisplayWhen} from \"../util/DisplayWhen\";\r\n\r\ntype Props = {\r\n    count: number;\r\n}\r\n\r\nexport const Result = function ({count}: Props) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (count % 2 == 0) {\r\n            setVisible(true);\r\n        } else {\r\n            setVisible(false)\r\n        }\r\n    }, [count])\r\n\r\n    return (\r\n        <>\r\n            <DisplayWhen visible={visible}>\r\n                Count : {count}\r\n            </DisplayWhen>\r\n\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Button} from \"./Button\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {Result} from \"./Result\";\r\n\r\nexport const Form = function () {\r\n    const [count, setCount] = useState(0);\r\n\r\n    function incCount(count:number){\r\n        setCount(count)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/\">Home</Link><br/>\r\n            <Button funcIncCount={incCount} count={count}/><br/>\r\n            <Result count={count}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './navbar.css'\r\n\r\nexport const Navbar = function () {\r\n    return (\r\n        <>\r\n            <div className={\"navbar\"}>\r\n                <div className={\"navbarPages\"}>\r\n                    <Link to={\"/\"}>\r\n                        <button>Home</button>\r\n                    </Link>\r\n                    <Link to={\"/farmers\"}>\r\n                        <button>Farmers</button>\r\n                    </Link>\r\n                    <Link to={\"/cart\"}>\r\n                        <button>Cart</button>\r\n                    </Link>\r\n                </div>\r\n                <div className={\"navbarSettings\"}>\r\n                    <Link to={\"/login\"}>\r\n                        <button>Login</button>\r\n                    </Link>\r\n                    <Link to={\"/register\"}>\r\n                        <button>Register</button>\r\n                    </Link>\r\n                    <Link to={\"/settings\"}>\r\n                        <button>Settings</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { IItem } from \"../../commons/interface/IItem\";\r\nimport {SERVER_LINK} from \"../../commons/config\";\r\nimport {Responses} from \"../../commons/enums/Responses\";\r\nimport { Requests } from \"../../commons/enums/Requests\";\r\nimport { IItemCart } from \"../../commons/interface/IItemCart\";\r\nimport io from 'socket.io-client';\r\n\r\ntype Props = {\r\n    item: IItem\r\n    farmerName : string\r\n}\r\nlet socket: any\r\nfunction onItemClick(e:any, item : IItem, name:string) : any {\r\n    e.preventDefault();\r\n    socket = io(SERVER_LINK);\r\n    var itemCart : IItemCart = {count:1, name: item.name, farmer:name, price: item.price}\r\n\r\n    socket.emit(Requests.addToCart, itemCart);\r\n\r\n}\r\n\r\nexport const FarmerItem = function ({ item, farmerName }: Props) {\r\n    const { name, amount, price, mfgDate, expireDate, modeOfPayment, deliveryMethod } = item;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{amount}</td>\r\n            <td>{price}</td>\r\n            <td>{mfgDate}</td>\r\n            <td>{expireDate}</td>\r\n            <td>{modeOfPayment}</td>\r\n            <td>{deliveryMethod}</td>\r\n            <button onClick={(e) => onItemClick(e, item, farmerName)}>Add To Cart</button>\r\n        </tr>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport \"./login.css\"\r\n\r\nexport const Register = function () {\r\n    const [farmerLID, setFarmerLID] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(-1);\r\n    const [city, setCity] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [houseNr, setHouseNr] = useState(-1);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function register(){\r\n        setFarmerLID(\"\")\r\n        setFirstName(\"\")\r\n        setLastName(\"\")\r\n        setZipCode(-1)\r\n        setCity(\"\")\r\n        setStreet(\"\")\r\n        setHouseNr(-1)\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={\"form\"}>\r\n                <label>\r\n                    Farmer Licence ID<br/>\r\n                    <input type={\"text\"} value={farmerLID} onChange={(event) => setFarmerLID(event.target.value)}/>\r\n                </label>\r\n                <div className={\"flex\"}>\r\n                    <label>\r\n                        First Name<br/>\r\n                        <input type={\"text\"} value={firstName} onChange={(event) => setFirstName(event.target.value)}/>\r\n                    </label>\r\n                    <label>\r\n                        Last Name<br/>\r\n                        <input type={\"text\"} value={lastName}\r\n                               onChange={(event) => setLastName(event.target.value)}/>\r\n                    </label>\r\n                </div>\r\n                <div className={\"flex\"}>\r\n                    <label>\r\n                        ZIP Code<br/>\r\n                        <input type={\"text\"} value={zipCode}\r\n                               onChange={(event) => setZipCode(parseInt(event.target.value))}/>\r\n                    </label>\r\n                    <label>\r\n                        City<br/>\r\n                        <input type={\"text\"} value={city} onChange={(event) => setCity(event.target.value)}/>\r\n                    </label>\r\n                </div>\r\n                <div className={\"flex\"}>\r\n                    <label>\r\n                        Street<br/>\r\n                        <input type={\"text\"} value={street} onChange={(event) => setStreet(event.target.value)}/>\r\n                    </label>\r\n                    <label>\r\n                        Number<br/>\r\n                        <input type={\"text\"} value={houseNr}\r\n                               onChange={(event) => setHouseNr(parseInt(event.target.value))}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <label>\r\n                    E-Mail<br/>\r\n                    <input type={\"text\"} value={email} onChange={(event) => setEmail(event.target.value)}/>\r\n                </label>\r\n\r\n                <label>\r\n                    Password<br/>\r\n                    <input type={\"text\"} value={password} onChange={(event) => setPassword(event.target.value)}/>\r\n                </label>\r\n                <br/>\r\n                <button onClick={register}>REGISTER\r\n                </button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Farmer} from \"./Farmer\";\r\nimport {IFarmer} from \"../../commons/interface/IFarmer\";\r\nimport io from 'socket.io-client';\r\nimport {SERVER_LINK} from \"../../commons/config\";\r\nimport {Responses} from \"../../commons/enums/Responses\";\r\nimport {Requests} from \"../../commons/enums/Requests\";\r\nimport {FarmerList} from \"./FarmerList\";\r\n\r\nlet socket: any\r\n\r\nexport const FarmerSocket = function () {\r\n    const [farmerList, setFarmerList] = useState(new Array<IFarmer>());\r\n\r\n    useEffect(() => {\r\n        socket = io(SERVER_LINK);\r\n\r\n        initFarmerList();\r\n\r\n        socket.on(Responses.farmerlist, (farmerList: Array<IFarmer>) => {\r\n            console.log(\"getting farmerlist\", farmerList);\r\n            setFarmerList(farmerList);\r\n        })\r\n    }, [])\r\n\r\n    function initFarmerList() {\r\n        socket.emit(Requests.farmerlist, \"\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FarmerList farmers={farmerList}/>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {IFarmer} from \"../../commons/interface/IFarmer\";\r\nimport io from 'socket.io-client';\r\nimport {SERVER_LINK} from \"../../commons/config\";\r\nimport {Responses} from \"../../commons/enums/Responses\";\r\nimport {Requests} from \"../../commons/enums/Requests\";\r\nimport {Cart} from \"./Cart\";\r\nimport { IItemCart } from \"../../commons/interface/IItemCart\";\r\n\r\nlet socket: any\r\n\r\nexport const CartSocket = function () {\r\n    const [cartList, setCartList] = useState(new Array<IItemCart>());\r\n\r\n    useEffect(() => {\r\n        socket = io(SERVER_LINK);\r\n\r\n        initCartList();\r\n\r\n        socket.on(Responses.cartlist, (cartList: Array<IItemCart>) => {\r\n            console.log(\"getting cartlist\", cartList);\r\n            setCartList(cartList);\r\n        })\r\n    }, [])\r\n\r\n    function emptyCart() {\r\n        \r\n    socket.emit(Requests.emptyCart);\r\n    }\r\n    function initCartList() {\r\n        socket.emit(Requests.cartlist, \"\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Cart items={cartList} emptyCart={emptyCart}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { findAllInRenderedTree } from 'react-dom/test-utils';\r\nimport { FarmerInfo } from './FarmerInfo';\r\nimport { FarmerItem } from './FarmerItem';\r\nimport { IFarmerInfo } from '../../commons/interface/IFarmerInfo';\r\nimport { IItem } from '../../commons/interface/IItem';\r\n\r\n\r\ntype Props = {\r\n    farmerInfo: IFarmerInfo\r\n    farmerItems: Array<IItem>\r\n}\r\n\r\nexport const Farmer = function ({ farmerInfo, farmerItems }: Props) {\r\n    return (\r\n        <>\r\n        <span>Farmer:</span>\r\n            <table className=\"farmerTable\">\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>ZIP-Code</th>\r\n                    <th>City</th>\r\n                    <th>Street</th>\r\n                    <th>Housenumber</th>\r\n                </tr>\r\n                <tr>\r\n                    <td> {farmerInfo.name}</td>\r\n                    <td> {farmerInfo.zipCode} </td>\r\n                    <td> {farmerInfo.city} </td>\r\n                    <td> {farmerInfo.street} </td>\r\n                    <td> {farmerInfo.housenumber}</td>\r\n                </tr>\r\n\r\n            </table>\r\n\r\n            <span>Items:</span>\r\n            <table className=\"itemTable\">\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Amount</th>\r\n                    <th>Price</th>\r\n                    <th>MFG Date</th>\r\n                    <th>Expire Date</th>\r\n                    <th>Payment Method</th>\r\n                    <th>Delivery Method</th>\r\n                </tr>\r\n\r\n                {\r\n                    farmerItems.map((item) =>\r\n                        <FarmerItem item={item} farmerName={farmerInfo.name} />\r\n                    )\r\n                }\r\n\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Farmer } from \"./Farmer\";\r\nimport { IFarmer } from \"../../commons/interface/IFarmer\";\r\nimport io from 'socket.io-client';\r\nimport { SERVER_LINK } from \"../../commons/config\";\r\nimport { Responses } from \"../../commons/enums/Responses\";\r\nimport { Requests } from \"../../commons/enums/Requests\";\r\nimport \"./farmerlist.css\"\r\n\r\ntype Props = {\r\n    farmers: Array<IFarmer>\r\n}\r\n\r\nexport const FarmerList = function ({ farmers }: Props) {\r\n\r\n    return (\r\n        <>\r\n            {farmers.map((farmer) => {\r\n                return (\r\n\r\n                        <Farmer farmerInfo={farmer.farmerInfo} farmerItems={farmer.items} />\r\n\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { Button } from \"../example/Button\";\r\nimport { IItemCart } from '../../commons/interface/IItemCart';\r\n\r\ntype Props = {\r\n    item: IItemCart\r\n}\r\n\r\nexport const Item = function ({ item }: Props) {\r\n    const { count, name, farmer, price } = item;\r\n\r\n    return (\r\n\r\n        <tr>\r\n            <td>{count}</td>\r\n            <td>{name}</td>\r\n            <td>{farmer}</td>\r\n            <td>{price}</td>\r\n        </tr>\r\n\r\n    )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Item } from './Item';\r\nimport \"./cart.css\"\r\nimport { IItemCart } from '../../commons/interface/IItemCart';\r\nimport { SERVER_LINK } from '../../commons/config';\r\nimport { Requests } from '../../commons/enums/Requests';\r\nimport io from 'socket.io-client';\r\n\r\n\r\ntype Props = {\r\n    items: Array<IItemCart>\r\n    emptyCart: () => void;\r\n}\r\n\r\nexport const Cart = function ({ items, emptyCart }: Props) {\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(-1);\r\n    const [city, setCity] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [houseNr, setHouseNr] = useState(-1);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function register() {\r\n        setFirstName(\"\")\r\n        setLastName(\"\")\r\n        setZipCode(-1)\r\n        setCity(\"\")\r\n        setStreet(\"\")\r\n        setHouseNr(-1)\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n    }\r\n\r\n\r\n    let countPrice = 0;\r\n    let countItems = 0;\r\n\r\n    return (\r\n        <>\r\n            <table className=\"cartTable\">\r\n                <tr>\r\n                    <th>Count</th>\r\n                    <th>Name</th>\r\n                    <th>Farmer</th>\r\n                    <th>Price</th>\r\n                </tr>\r\n                {\r\n                    items.map((item) =>\r\n                        <Item item={item} />\r\n                    )\r\n                }\r\n                <tr>\r\n                    <td className=\"totalCost\">\r\n                        Total Cost: {\r\n                            items.forEach(item => countPrice += item.count * item.price)}\r\n                        {countPrice}\r\n                        <br></br>\r\n                        Total Items:  {\r\n                            items.forEach(item => countItems += item.count)}\r\n                        {countItems}\r\n\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n            <button onClick={emptyCart}>Empty Cart</button>\r\n\r\n            < div >\r\n                <form className={\"form\"}>\r\n                    <div className={\"flex\"}>\r\n                        <label>\r\n                            First Name<br />\r\n                            <input type={\"text\"} value={firstName} onChange={(event) => setFirstName(event.target.value)} />\r\n                        </label>\r\n                        <label>\r\n                            Last Name<br />\r\n                            <input type={\"text\"} value={lastName}\r\n                                onChange={(event) => setLastName(event.target.value)} />\r\n                        </label>\r\n                    </div>\r\n                    <div className={\"flex\"}>\r\n                        <label>\r\n                            ZIP Code<br />\r\n                            <input type={\"text\"} value={zipCode}\r\n                                onChange={(event) => setZipCode(parseInt(event.target.value))} />\r\n                        </label>\r\n                        <label>\r\n                            City<br />\r\n                            <input type={\"text\"} value={city} onChange={(event) => setCity(event.target.value)} />\r\n                        </label>\r\n                    </div>\r\n                    <div className={\"flex\"}>\r\n                        <label>\r\n                            Street<br />\r\n                            <input type={\"text\"} value={street} onChange={(event) => setStreet(event.target.value)} />\r\n                        </label>\r\n                        <label>\r\n                            Number<br />\r\n                            <input type={\"text\"} value={houseNr}\r\n                                onChange={(event) => setHouseNr(parseInt(event.target.value))} />\r\n                        </label>\r\n                    </div>\r\n\r\n\r\n                    <button>Buy</button>\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart","import React from 'react';\r\nimport {Route, Switch, BrowserRouter} from \"react-router-dom\";\r\nimport {Home} from \"./components/Home\";\r\nimport {Form} from \"./components/example/Form\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {Login} from \"./components/Auth/Login\";\r\nimport {Register} from \"./components/Auth/Register\";\r\nimport { FarmerList } from './components/farmersList/FarmerList';\r\nimport {FarmerSocket} from \"./components/farmersList/FarmerSocket\";\r\nimport { Cart } from './components/cart/Cart';\r\nimport { CartSocket } from './components/cart/CartSocket';\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar/>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/example\" exact component={Form}/>\r\n                <Route path=\"/login\" exact component={Login}/>\r\n                <Route path=\"/register\" exact component={Register}/>\r\n                <Route path=\"/farmers\" exact component={FarmerSocket}/>\r\n                <Route path=\"/cart\" exact component={CartSocket}/>\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}