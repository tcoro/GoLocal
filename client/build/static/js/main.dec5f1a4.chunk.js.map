{"version":3,"sources":["components/Home.tsx","components/example/Button.tsx","components/util/DisplayWhen.tsx","components/example/Result.tsx","components/example/Form.tsx","components/Navbar/Navbar.tsx","components/Auth/Login.tsx","components/Auth/Register.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","className","Button","funcIncCount","count","onClick","DisplayWhen","this","props","visible","children","Component","Result","useState","setVisible","useEffect","Form","setCount","to","Navbar","Login","email","setEmail","password","setPassword","type","value","onChange","event","target","Register","farmerLID","setFarmerLID","firstName","setFirstName","lastName","setLastName","zipCode","setZipCode","city","setCity","street","setStreet","houseNr","setHouseNr","parseInt","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dec5f1a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './home.css'\r\n\r\nexport const Home = function () {\r\n    return (\r\n        <>\r\n            <div className={\"home\"}>\r\n                <div><h1>GO LOCAL</h1></div>\r\n            <div><h4>  your local farmer shop</h4></div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport \"./Button.css\"\r\n\r\ntype Props = {\r\n    funcIncCount: (count:number) => void;\r\n    count: number\r\n}\r\n\r\nexport const Button = function ({funcIncCount, count}:Props) {\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => funcIncCount(count++)} className={\"myButton\"}>IncreaceCount</button>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport { Component } from 'react';\r\n\r\ninterface IProps {\r\n    visible: boolean;\r\n}\r\n\r\nexport class DisplayWhen extends Component<IProps, {}> {\r\n    public render(): React.ReactElement {\r\n        if (this.props.visible) {\r\n            return (\r\n                <>\r\n                    {this.props.children}\r\n                </>\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {DisplayWhen} from \"../util/DisplayWhen\";\r\n\r\ntype Props = {\r\n    count: number;\r\n}\r\n\r\nexport const Result = function ({count}: Props) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (count % 2 == 0) {\r\n            setVisible(true);\r\n        } else {\r\n            setVisible(false)\r\n        }\r\n    }, [count])\r\n\r\n    return (\r\n        <>\r\n            <DisplayWhen visible={visible}>\r\n                Count : {count}\r\n            </DisplayWhen>\r\n\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Button} from \"./Button\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {Result} from \"./Result\";\r\n\r\nexport const Form = function () {\r\n    const [count, setCount] = useState(0);\r\n\r\n    function incCount(count:number){\r\n        setCount(count)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/\">Home</Link><br/>\r\n            <Button funcIncCount={incCount} count={count}/><br/>\r\n            <Result count={count}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './navbar.css'\r\n\r\nexport const Navbar = function () {\r\n    return (\r\n        <>\r\n            <div className={\"navbar\"}>\r\n                <div className={\"navbarPages\"}>\r\n                    <Link to={\"/\"}>\r\n                        <button>Home</button>\r\n                    </Link>\r\n                    <Link to={\"/farmers\"}>\r\n                        <button>Farmers</button>\r\n                    </Link>\r\n                    <Link to={\"/cart\"}>\r\n                        <button>Cart</button>\r\n                    </Link>\r\n                </div>\r\n                <div className={\"navbarSettings\"}>\r\n                    <Link to={\"/login\"}>\r\n                        <button>Login</button>\r\n                    </Link>\r\n                    <Link to={\"/register\"}>\r\n                        <button>Register</button>\r\n                    </Link>\r\n                    <Link to={\"/settings\"}>\r\n                        <button>Settings</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport \"./login.css\"\r\n\r\nexport const Login = function () {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function login(){\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={\"form\"}>\r\n                <label>\r\n                    E-Mail<br/>\r\n                    <input type={\"text\"} value={email} onChange={(event) => setEmail(event.target.value)}/>\r\n                </label>\r\n\r\n                <label>\r\n                    Password<br/>\r\n                    <input type={\"text\"} value={password} onChange={(event) => setPassword(event.target.value)}/>\r\n                </label>\r\n                <br/>\r\n                <button onClick={login}>LOGIN\r\n                </button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport \"./login.css\"\r\n\r\nexport const Register = function () {\r\n    const [farmerLID, setFarmerLID] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(-1);\r\n    const [city, setCity] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [houseNr, setHouseNr] = useState(-1);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function register(){\r\n        setFarmerLID(\"\")\r\n        setFirstName(\"\")\r\n        setLastName(\"\")\r\n        setZipCode(-1)\r\n        setCity(\"\")\r\n        setStreet(\"\")\r\n        setHouseNr(-1)\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={\"form\"}>\r\n                <label>\r\n                    Farmer Licence ID<br/>\r\n                    <input type={\"text\"} value={farmerLID} onChange={(event) => setFarmerLID(event.target.value)}/>\r\n                </label>\r\n                <div className={\"flex\"}>\r\n                    <label>\r\n                        First Name<br/>\r\n                        <input type={\"text\"} value={firstName} onChange={(event) => setFirstName(event.target.value)}/>\r\n                    </label>\r\n                    <label>\r\n                        Last Name<br/>\r\n                        <input type={\"text\"} value={lastName}\r\n                               onChange={(event) => setLastName(event.target.value)}/>\r\n                    </label>\r\n                </div>\r\n                <div className={\"flex\"}>\r\n                    <label>\r\n                        ZIP Code<br/>\r\n                        <input type={\"text\"} value={zipCode}\r\n                               onChange={(event) => setZipCode(parseInt(event.target.value))}/>\r\n                    </label>\r\n                    <label>\r\n                        City<br/>\r\n                        <input type={\"text\"} value={city} onChange={(event) => setCity(event.target.value)}/>\r\n                    </label>\r\n                </div>\r\n                <div className={\"flex\"}>\r\n                    <label>\r\n                        Street<br/>\r\n                        <input type={\"text\"} value={street} onChange={(event) => setStreet(event.target.value)}/>\r\n                    </label>\r\n                    <label>\r\n                        Number<br/>\r\n                        <input type={\"text\"} value={houseNr}\r\n                               onChange={(event) => setHouseNr(parseInt(event.target.value))}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <label>\r\n                    E-Mail<br/>\r\n                    <input type={\"text\"} value={email} onChange={(event) => setEmail(event.target.value)}/>\r\n                </label>\r\n\r\n                <label>\r\n                    Password<br/>\r\n                    <input type={\"text\"} value={password} onChange={(event) => setPassword(event.target.value)}/>\r\n                </label>\r\n                <br/>\r\n                <button onClick={register}>REGISTER\r\n                </button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\nimport {Route, Switch, BrowserRouter} from \"react-router-dom\";\nimport {Home} from \"./components/Home\";\nimport {Form} from \"./components/example/Form\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Login} from \"./components/Auth/Login\";\nimport {Register} from \"./components/Auth/Register\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Navbar/>\n            <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/example\" exact component={Form}/>\n                <Route path=\"/login\" exact component={Login}/>\n                <Route path=\"/register\" exact component={Register}/>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}