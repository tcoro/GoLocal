{"version":3,"sources":["components/Home.tsx","components/example/Button.tsx","components/util/DisplayWhen.tsx","components/example/Result.tsx","components/example/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","to","Button","funcIncCount","count","onClick","className","DisplayWhen","this","props","visible","children","Component","Result","useState","setVisible","useEffect","Form","setCount","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGaA,EAAO,WAChB,OACI,mCACI,cAAC,IAAD,CAAMC,GAAI,WAAV,wB,QCECC,G,MAAS,YAAwC,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,MAE3C,OACI,mCACI,wBAAQC,QAAS,kBAAMF,EAAaC,MAAUE,UAAW,WAAzD,+B,gCCLCC,EAAb,uKAEQ,OAAIC,KAAKC,MAAMC,QAEP,mCACKF,KAAKC,MAAME,WAGV,iCARtB,GAAiCC,aCApBC,EAAS,YAA2B,IAAhBT,EAAe,EAAfA,MAAe,EACdU,oBAAS,GADK,mBACrCJ,EADqC,KAC5BK,EAD4B,KAW5C,OARAC,qBAAU,WAEFD,EADAX,EAAQ,GAAK,KAKlB,CAACA,IAGA,mCACI,eAAC,EAAD,CAAaM,QAASA,EAAtB,qBACaN,QChBZa,EAAO,WAAa,IAAD,EACFH,mBAAS,GADP,mBACrBV,EADqB,KACdc,EADc,KAO5B,OACI,qCACI,cAAC,IAAD,CAAMjB,GAAG,IAAT,kBAAwB,uBACxB,cAAC,EAAD,CAAQE,aAPhB,SAAkBC,GACdc,EAASd,IAM2BA,MAAOA,IAAQ,uBAC/C,cAAC,EAAD,CAAQA,MAAOA,QCAZe,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtB,IACjC,cAAC,IAAD,CAAOoB,KAAK,WAAWC,OAAK,EAACC,UAAWL,UCIjCM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b99e456c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Home = function () {\r\n    return (\r\n        <>\r\n            <Link to={\"/example\"}>example</Link>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport \"./Button.css\"\r\n\r\ntype Props = {\r\n    funcIncCount: (count:number) => void;\r\n    count: number\r\n}\r\n\r\nexport const Button = function ({funcIncCount, count}:Props) {\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => funcIncCount(count++)} className={\"myButton\"}>IncreaceCount</button>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport { Component } from 'react';\r\n\r\ninterface IProps {\r\n    visible: boolean;\r\n}\r\n\r\nexport class DisplayWhen extends Component<IProps, {}> {\r\n    public render(): React.ReactElement {\r\n        if (this.props.visible) {\r\n            return (\r\n                <>\r\n                    {this.props.children}\r\n                </>\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {DisplayWhen} from \"../util/DisplayWhen\";\r\n\r\ntype Props = {\r\n    count: number;\r\n}\r\n\r\nexport const Result = function ({count}: Props) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (count % 2 == 0) {\r\n            setVisible(true);\r\n        } else {\r\n            setVisible(false)\r\n        }\r\n    }, [count])\r\n\r\n    return (\r\n        <>\r\n            <DisplayWhen visible={visible}>\r\n                Count : {count}\r\n            </DisplayWhen>\r\n\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Button} from \"./Button\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {Result} from \"./Result\";\r\n\r\nexport const Form = function () {\r\n    const [count, setCount] = useState(0);\r\n\r\n    function incCount(count:number){\r\n        setCount(count)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/\">Home</Link><br/>\r\n            <Button funcIncCount={incCount} count={count}/><br/>\r\n            <Result count={count}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport {Route, Switch, BrowserRouter} from \"react-router-dom\";\nimport {Home} from \"./components/Home\";\nimport {Form} from \"./components/example/Form\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/example\" exact component={Form}/>\n      </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}